package Main;

import java.awt.Rectangle;
import java.util.Random;
import java.util.Scanner;

public class YangLu {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		//Yang Lu
		
		
		Scanner input = new Scanner(System.in);
		
		System.out.println("WELCOME TO HACKING 101!\nPlease choose a difficulty\nE = easy\nM = medium\nH = hard\nS = SUPER");
		String selection = input.nextLine();
		char difficulty = selection.charAt(0);
		
		
		int x = 0, y = 0, width = 0, height = 0, precision = 1;
		int series[] = null;
		String endmsg = "nothing yet";
		String result = "nothing yet"; 
		
		Random insert = new Random();
		long sTime = 0;
		int bTime = 0;
		
		switch(difficulty)
		{
			case 'e':
			case 'E':
			{
				series = new int [4];
				precision = 10;
				sTime = System.currentTimeMillis();
				bTime = 300000;
				endmsg = "You now know the basics of hacking";
				for(int count = 0; count<4; count++)
					series[count] = insert.nextInt(9);
				System.out.println("You have accessed a simple home firewall to break through!");
				System.out.println("The gap needed should be between 0-9");
				break;
			}
			
			case 'm':
			case 'M':
			{
				series = new int [28];
				precision = 5;
				sTime = System.currentTimeMillis();
				bTime = 600000;
				endmsg = "You are a fairly advanced hacker";
				for(int count = 0; count<28; count++)
					series[count] = insert.nextInt(30);
				System.out.println("You have accessed the personal bank account of a millionaire!");
				System.out.println("The gap needed should be between 0-30");
				break;
			}
			
			case 'h':
			case 'H':
			{
				series = new int [40];
				precision = 2;
				sTime = System.currentTimeMillis();
				bTime = 1200000;
				endmsg = "You are a hyper advanced hacker!!!";
				for(int count = 0; count<40; count++)
					series[count] = insert.nextInt(100);
				System.out.println("You are stopped in front of a large transnational corporation's firewall!");
				System.out.println("The gap needed should be between 0-100");
				break;
			}
			
			case 's':
			case 'S':
			{
				series = new int [100];
				precision = 1;
				sTime = System.currentTimeMillis();
				bTime = 1500000;
				endmsg = "YOU ARE THE WORLD'S BEST HACKER! CAPABLE OF SHUTTING DOWN AMERICA HOMELAND SECURITY!!!";
				for(int count = 0; count<100; count++)
					series[count] = insert.nextInt(1000);
				System.out.println("YOU HAVE BEEN HALTED BY THE AMERICAN HOMELAND SECURITY'S FIREWALL!!!");
				System.out.println("The gap needed should be between 0-1000");
				break;
			}
			default:
			{
				System.out.println("Defaulting to medium.");
				series = new int [40];
				precision = 2;
				sTime = System.currentTimeMillis();
				bTime = 1200000;
				endmsg = "You are a hyper advanced hacker!!!";
				for(int count = 0; count<40; count++)
					series[count] = insert.nextInt(100);
				System.out.println("You are stopped in front of a large transnational corporation's firewall!");
				break;
			}
		
		
		}
		
		
		
		System.out.println("Try to achieve horizontal, vertical, width, and height synchronization to send your virus through!\nDone in that order.");
		x = input.nextInt();
		y = input.nextInt();
		width = input.nextInt();
		height = input.nextInt();
		
		for(int count = 0; count < (series.length - 3); count++)
		{
			while(x != series[count]  ||  y != series[(count + 1)]  ||  width != series[(count + 2)]  ||  height != series[(count +3)])
			{
				if(x == series[count])
				{
					System.out.println("Horizontal synchronization achieved");
				}
				else
				{
					if(x >= (series[count] - (10/precision))  &&  x <= (series[count] + (10/precision)))
					{
						System.out.println("Horizontal synchronization extremely close");
					}
					else
					{
						if(x >= (series[count] - (50/precision))  &&  x <= (series[count] + (50/precision)))
						{
							System.out.println("General horizontal synchronization area located");
						}
						else
						{
							System.out.println("Horizontal synchronization failed");
						}
					}
				}
				
				
				if(y == series[(count + 1)])
				{
					System.out.println("Verticle synchronization achieved");
				}
				else
				{
					if(y >= (series[(count + 1)] - (10/precision))  &&  y <= (series[(count + 1)] + (10/precision)))
					{
						System.out.println("Verticle synchronization extremely close");
					}
					else
					{
						if(y >= (series[(count + 1)] - (50/precision))  &&  y <= (series[(count + 2)] + (50/precision)))
						{
							System.out.println("General verticle synchronization area located");
						}
						else
						{
							System.out.println("Verticle synchronization failed");
						}
					}
				}
				
				
				if(width == series[(count + 2)])
				{
					System.out.println("Width synchronization achieved");
				}
				else
				{
					if(width >= (series[(count + 2)] - (10/precision))  &&  width <= (series[(count + 2)] + (10/precision)))
					{
						System.out.println("Width synchronization extremely close");
					}
					else
					{
						if(width >= (series[(count + 2)] - (50/precision))  &&  width <= (series[(count + 2)] + (50/precision)))
						{
							System.out.println("General width synchronization area located");
						}
						else
						{
							System.out.println("Width synchronization failed");
						}
					}
				}
				
				
				if(height == series[(count + 3)])
				{
					System.out.println("Height synchronization achieved");
				}
				else
				{
					if(height >= (series[(count + 3)] - (10/precision))  &&  height <= (series[(count + 3)] + (10/precision)))
					{
						System.out.println("Height synchronization extremely close");
					}
					else
					{
						if(height >= (series[(count + 3)] - (50/precision))  &&  height <= (series[(count + 3)] + (50/precision)))
						{
							System.out.println("General height synchronization area located");
						}
						else
						{
							System.out.println("Height synchronization failed");
						}
					}
				}
				
				
				x = input.nextInt();
				y = input.nextInt();
				width = input.nextInt();
				height = input.nextInt();
				
				Rectangle virus = new Rectangle(x,y,width,height);
				result = ("The successful virus entrance code is " + virus);
				
				long cTime = System.currentTimeMillis();
				if(cTime>=(sTime + bTime))
				{
					System.out.println("Time's up!");
					endmsg = "You have failed!";
					result = "You did not locate the gap.";
					break;
				}
				
				
			}
			
			long cTime = System.currentTimeMillis();
			if(cTime>=(sTime + bTime))
			{
				break;
			}
			
			System.out.println(result);
			
		}
		
		System.out.println(endmsg);
		System.out.println("This program was brought to you by Yang Lu");
		
		
	}

}
